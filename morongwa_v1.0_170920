<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config" scriptlang="groovy">

<secrets-vault-get alias="morongwa" />


<var-def name="bot_task_properties">
	<datastore name="sfi_refund">
		<template>select * from @this</template>
	</datastore>
</var-def>

<script><![CDATA[
	def BOT_CONFIG = [:]
	bot_task_properties.getWrappedObject().toList().each { property ->
		BOT_CONFIG.put(property.get("name").toString(), property.get("value").toString())
	}
	sys.defineVariable("BOT_CONFIG", BOT_CONFIG)
]]></script>
	
	<robotics-flow>
<robot driver="universal" name="driver" start-in-private="false" close-on-completion="true">
			<capability name ="SEARCH_ALL_WINDOWS" value="true"/>
			<capability name="CLOSE_ALL_WINDOWS" value="false"/>
			
			<capability name="chromeOptions">
				<script return="chromeArgs"><![CDATA[
					
					//DONWLOAD PATH [put path in datastore in this format-->\\muebcyp02fvg02\eProcessing1$\ROBOTICS\SFI Refund\config\Open]
					String download_path = (BOT_CONFIG.getWrappedObject().get("open_path").toString());
					
					import org.openqa.selenium.chrome.ChromeOptions;
					String dl_path = "";
					ChromeOptions options = new ChromeOptions();
					Map<String,Object> prefs = new HashMap<String,Object>();
					prefs.put("download.default_directory",download_path);
					options.setExperimentalOption("prefs",prefs)
					chromeArgs = options;
				 ]]></script>
			</capability>
			
		<script><![CDATA[
		
		//date
		import java.time.LocalDate;
		import java.time.LocalDateTime;
		import java.time.ZoneId;
		import java.time.format.DateTimeFormatter
		//gAuth
		import com.warrenstrange.googleauth.GoogleAuthenticator;
		//files	
		import org.apache.commons.io.FileUtils;
		import java.io.File;
		import java.io.FileInputStream;
		import java.io.FileOutputStream;
		import java.nio.file.FileSystem;
		import java.nio.file.FileSystems;
		import java.nio.file.Files;
		import java.nio.file.Path;
		import java.nio.file.StandardCopyOption;

		boolean next_step = true;
		
		//Recycle
		String daily_path = daily_path_str;
		
		//recycle
		String pwdStr 		 = previous_date;
		String karanLocalStr = current_date;
		String dailyPath 	 = daily_path_str;
		String pwdPath 		 = pwd_path_str;
		String openPath		 = open_path;
		
		LocalDate pwd    = LocalDate.parse(pwdStr); 
		LocalDate karanLocal    = LocalDate.parse(karanLocalStr); 										//live
		LocalDateTime kLDT 		= LocalDateTime.now(ZoneId.of("GMT+04:00"));
		
		String tayme = karanLocal.toString() + " " + kLDT.getHour().toString()+ "_" + kLDT.getMinute().toString()
		
		//DATASTORE
		//MORONGWA LIVE
		String morongwa_live = (BOT_CONFIG.getWrappedObject().get("morongwa_live").toString());
		//SECRET
		String secret = (BOT_CONFIG.getWrappedObject().get("secret").toString());
		
		//SECRETS VAULT
		Map entryMap = secureEntryMap.getWrappedObject();
		com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj2 = entryMap.get("morongwa");
		morongwa_login = obj2.getKey().toString();
		morongwa_pass = obj2.getValue().toString();	
		
		//LOG FILE
		FileWriter fr = new FileWriter(daily_path+"log.txt", true);
		BufferedWriter loginta = new BufferedWriter(fr);
		
		loginta.append("----------------------------------------------------");
		loginta.newLine();
		loginta.append(tayme);
		loginta.newLine();
		loginta.append("Previous Working Day is: ");
		loginta.append(pwd.toString());
		loginta.newLine();
		loginta.newLine();
		loginta.append("--DOWNLOAD SWIFT EXCEL--");
		loginta.newLine();
		//////////////////////////////////////////////////////////DOWNLOAD MORONGWA/////////////////////////////////////////////////////////////////
		//String secret = "KZ4U6RSLIRAWO32MGB2FCOBSGVQUUNBS";
		boolean login_pass = true;

		for (int c = 0; c < 2; c++){
			
			GoogleAuthenticator gAuth = new GoogleAuthenticator();
			int code = gAuth.getTotpPassword(secret);
			
			//LOGIN
			pageLoadTimeout(60000)
			openChrome(morongwa_live);
			$(byXpath('//*[@id="username"]')).sendKeys(morongwa_login);
			$(byXpath('//*[@id="password"]')).sendKeys(morongwa_pass);
			pageLoadTimeout(60000)
			$(byXpath('//*[@id="kc-login"]')).click();
			
			//G_AUTH 
			$(byXpath('//*[@id="otp"]')).sendKeys(code);//$(byXpath('//*[@id="totp"]')).sendKeys(code);
			pageLoadTimeout(50000)
			$(byXpath('//*[@id="kc-login"]')).click();
			
			boolean invalid_auth = false;
			try{
				invalid_auth = $(byXpath('//*[@id="kc-content-wrapper"]/div/span[2]')).is(EXISTS);
			}catch(Exception e){}
			if(invalid_auth){
				String warning = $(byXpath('//*[@id="kc-content-wrapper"]/div/span[2]')).text();
				if(warning.contains("Invalid authenticator code")){
					log.info("Invalid authenticator code. Logging in again");
					
				}
			}
				
			try{
				login_pass = $(byXpath('//*[@id="morongwa"]')).is(EXIST);
			}catch(Exception e){
				login_pass = false;
			}
			if(login_pass){
				log.info("Login Successful");
				break;
			}
				
		}

		if(!login_pass){
			log.info("Login to Morongwa failed twice. Stopping process");
			loginta.append("Login to Morongwa failed twice. Stopping process");
			loginta.newLine();
		}
		
		//test
		//switchToExistingWindow(new WindowDescriptor("", "(?i).*\\QMorongwa\\E.*", false, true).toString(), 1000)
		
		//wait for Payments
		try{
			pageLoadTimeout(10000);
			setFluentWaitTimeout(10000)
			setFluentWaitPollingInterval(300)
			fluentWait()
			  .ignoring(org.openqa.selenium.NoSuchElementException.class)
			  .until(ExpectedConditions.presenceOfElementLocated(byXpath('//*[@id="payments"]')))
			$(byXpath('//*[@id="payments"]')).click();
		}catch(Exception e){}
		
		//println("Hour of the day "+kLDT.getHour())
		 
		//MORNING RUN 
		if(kLDT.getHour() <= 12){
			//SYSTEM DATE--from
			sleep(10000)
			//click on datepicker
			$(byXpath('//div/i')).click();	
			
			//choose pwd evening time
			//click on time change
			$(byXpath('//div[4]/div/span')).click();
			//hour 
			$(byXpath("//input[@type='number']")).text("04")
			//min
			//$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[5]/div[1]/div[3]/input')).text("00");
			//pm
			$(byXpath("//button[contains(.,'PM')]")).click();
			sendKeys(Keys.PAGE_DOWN);
			sleep(1000);
			//set time
			$(byXpath('//div[3]/button')).click();
			sleep(1000);
			
			//if pwd is friday or public holiday
			String morongwaPwDate = pwd.format(morongwaQueryDateFormat);
			if(pwd != karanLocal.minusDays(1)){
				//change month
				if(pwd.getMonth() != karanLocal.getMonth()){
					$(byXpath('//div[2]/i')).click();
				}
				$(byText(morongwaPwDate)).click();
			}
			else{
				//done
				$(byXpath('//div[6]/div')).click();
			}
		
			//SYSTEM DATE--to
			//choose system date
			$(byXpath('//li[2]/div/div[2]/select')).click(); 
			$(byXpath("/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select/option[18]")).click();
			//$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select/option[18]')).click(); 
			sleep(1000);
			//choose operator(less than)
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select')).click();
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select/option[3]')).click(); 
			sleep(1000);
			
			
		} 
		
		//EVENING RUN 
		if(kLDT.getHour() > 12){
			String morongwaKaranDate = karanLocal.format(morongwaQueryDateFormat);
			//SYSTEM DATE--from
			sleep(10000)
			//click on datepicker
			$(byXpath('//div/i')).click();	
			//choose current morning time
			//click on time change
			$(byXpath('//div[4]/div/span')).click();	
			//hour 
			$(byXpath("//input[@type='number']")).text("10")
			//min
			//am
			$(byXpath("//button[contains(.,'AM')]")).click();
			sendKeys(Keys.PAGE_DOWN);
			sleep(1000);
			//set time
			$(byXpath('//div[3]/button')).click();
			sleep(1000);
		
			//choose date
			$(byText(morongwaKaranDate)).click();
			//done
			//$(byXpath('//*[@id="queryTab-panel"]/form/div/div/mor-query-builder/ul/li[1]/div/div[4]/div[1]/angular2-date-picker/div/div[2]/div[6]/div')).click();
		
		
			//SYSTEM DATE--to
			//choose system date
			$(byXpath('//li[2]/div/div[2]/select')).click(); 
			$(byXpath("/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[2]/select/option[18]")).click();
			sleep(1000);
			//choose operator(less than)
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select')).click();
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[2]/div/div[3]/select/option[3]')).click(); 
			sleep(1000);
			
			
		} 
			
			
		//ADD QUERY
		$(byXpath('//div[2]/label')).click();
		
		//DIRECTION
		$(byXpath('//li[3]/div/div[2]/select')).click();
		$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[3]/div/div[2]/select/option[6]')).click();
		$(byXpath("//select[@id='message_direction']")).click();
		$(byXpath('//*[@id="message_direction"]/option[2]')).click();
		
		//ADD QUERY
		$(byXpath("//label[contains(.,' Add')]")).click();
		
		//MESSAGE TYPE
		$(byXpath('//li[4]/div/div[2]/select')).click();
		$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[4]/div/div[2]/select/option[8]')).click();
		$(byXpath("//select[@id='message_messageType']")).click();
		$(byXpath("//*[@id='message_messageType']/option[79]")).click();
		
		//ADD QUERY
		$(byXpath("//label[contains(.,' Add')]")).click();
		
		//CURRENCY CODE
		$(byXpath('//li[5]/div/div[2]/select')).click();
		$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/mor-query-builder/ul/li[5]/div/div[2]/select/option[5]')).click();
		$(byXpath("//input[@id='currency']")).text('MUR');
		
		//test
		sleep(5000)
		
		//SEARCH
		sleep(2000);
		//$(byXpath('//*[@id="queryTab-panel"]/form/div/div/div/label/')).click();
		$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[1]/div/div/mor-search/div/div/div[2]/div/form/div/div/div/div[3]/button')).click();
		
		//DOWNLOAD EXCEL
		boolean download = $(byXpath('//mor-data-export/div/button')).is(ENABLED);
		boolean warning_present = false;
		while(!download){
			//wait for file to download
			try{
				warning_present = $(byXpath('//*[@id="toast-container"]/div/div[2]/span')).isExists();
			}catch(Exception e){}
			if(warning_present){
				String warning = $(byXpath('//*[@id="toast-container"]/div/div[2]/span')).text();
				if(warning.contains("No messages match your search")){
					log.info("No Morongwa messages found!");
					loginta.append("No Morongwa messages found!");
					loginta.newLine();
					next_step = false;
					break;
				}
			}
			download = $(byXpath('//mor-data-export/div/button')).is(ENABLED);
			//no message found toast
			
			sleep(2500);
			
		}

		if(download){ 
			$(byXpath('//mor-data-export/div/button')).click();
			$(byXpath('/html/body/app-root/div/div/div/ng-component/div[1]/ng-component/div/div[2]/div/div/div[1]/div/mor-data-export/div/div/button[1]')).click();
			sleep(5000);
			log.info("Morongwa Query Downloaded");
			loginta.append("Morongwa Query Downloaded");
			loginta.newLine();
		}
		else{
			log.info("Morongwa Query Not Downloaded")
		}
		
		loginta.append("----------------------------------------------------");
		loginta.newLine();
		loginta.newLine();
		loginta.close();

		sys.defineVariable("next_step",next_step);
		
	]]></script>
	
	</robot>
</robotics-flow>
	
    <export include-original-data="true">
	 <single-column name="next_step" value="${next_step}"/>
</export>

</config>		